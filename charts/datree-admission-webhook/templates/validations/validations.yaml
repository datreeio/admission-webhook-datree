{{- if and (.Values.datree.multiplePolicies) (not .Values.datree.configFromHelm)}}
    {{- fail "To use multiplePolicies please change configFromHelm to true" }}
{{- end }}
{{- if and (.Values.datree.multiplePolicies) (.Values.datree.policy)}}
    {{- fail "You can't use both policy and multiplePolicies at the same time" }}
{{- end }}
{{- if and (semverCompare "<1.19.x" .Capabilities.KubeVersion.Version) (.Values.securityContext.seccompProfile)}}
    {{- fail "it seems you are running Kubernetes version < 1.19.x. To run Datree in version < v1.19.x, please set securityContext.seccompProfile=null" }}
{{- end }}

{{/* don't allow the same policy to be used more than once */}}
{{- if .Values.datree.multiplePolicies}}
    {{- $policiesDict := dict}}
    {{- range $index, $policy := .Values.datree.multiplePolicies}}
        {{- $policyName := $policy.policy}}
        {{- if get $policiesDict $policyName}}
            {{- fail (printf "datree.multiplePolicies: Policy \"%s\" cannot be used more than once. Refer to docs for more info: https://hub.datree.io/configuration/behavior#multiple-policies" $policyName)}}
        {{- else}}
            {{- $_ := set $policiesDict $policyName true}}
        {{- end}}
    {{- end}}
{{- end }}

{{- $emptyTokenMessage := "\n\t‚ùå The installation failed since the token that was provided is invalid.\n\tüí° To fix this issue:\n\t\t1. Get your token at: https://app.datree.io/settings/token-management\n\t\t2. Reinstall Datree and set your token using helm:\n\n\t\thelm install -n datree datree-webhook datree-webhook/datree-admission-webhook --create-namespace --set datree.token=<YOUR_TOKEN>\n" -}}
{{- $invalidTokenMessage := "\n\t‚ùå The installation failed since the token that was provided is invalid.\n\tüí° To fix this issue:\n\t\t1. Get your token at: https://app.datree.io/settings/token-management\n\t\t2. Reinstall Datree and set your token using helm:\n\n\t\thelm install -n datree datree-webhook datree-webhook/datree-admission-webhook --create-namespace --set datree.token=<YOUR_TOKEN>\n" -}}
{{- $uuidv4RegexPattern := "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$" -}}
{{/*value: "{{ .Values.datree.token | regexFind $uuidv4RegexPattern | required $emptyTokenMessage }}"*/}}
  {{ if not .Values.datree.existingSecret }}

  {{ end }}
{{- if not .Values.datree.token }}
    {{- fail $emptyTokenMessage }}
{{- end }}
{{- if Values.datree.token | regexFind $uuidv4RegexPattern | not }}
    {{- fail $invalidTokenMessage }}
{{- end }}

{{- if .Values.datree.policy}}
    {{- $policyName := .Values.datree.policy}}
    {{- $policy := index .Values.datree.policies $policyName}}
    {{- if not $policy}}
        {{- fail (printf "datree.policy: Policy \"%s\" does not exist. Refer to docs for more info: https://hub.datree.io/configuration/behavior#policy" $policyName)}}
    {{- end}}
{{- end
