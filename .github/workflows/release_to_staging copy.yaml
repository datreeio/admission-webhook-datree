name: Niv test
on:
  push:
    branches: 
      - DAT-4673**
# jobs:
#   release-docker:
#     runs-on: ubuntu-18.04
#     env:
#       DOCKERHUB_ORGANIZATION: datree
#       DOCKERHUB_REPO: webhook-staging
#     name: build docker image
#     steps:
#       - uses: actions/checkout@v3
#       - uses: uraimo/run-on-arch-action@v2
#         name: Run commands
#         id: runcmd
#         with:
#           arch: arm64
#           distro: ubuntu18.04
#           # githubToken: ${{ github.token }}
#           run: |
#             uname -a
#             echo ::set-output name=uname::$(uname -a)
#             docker build -t datree .
#             docker images -a
#             docker image inspect --format "{{.ID}} {{.RepoTags}} {{.Architecture}}" $(docker image ls -q)
jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          # githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"            
            
      # - name: Define release version
      #   id: define_version
      #   run: |-
      #     OUTPUT_VERSION=$(bash scripts/get_last_short_commit_hash.sh)
      #     echo "detected version = $OUTPUT_VERSION"
      #     echo "version=$OUTPUT_VERSION" >> $GITHUB_OUTPUT
      
      # - uses: docker/setup-buildx-action@v2
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push datree image to registries
      #   uses: docker/build-push-action@v3
      #   with:
      #     build-args: |-
      #       "BUILD_ENVIRONMENT=staging"
      #       "WEBHOOK_VERSION=${{ steps.define_version.outputs.version }}"
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: |
      #       ${{ env.DOCKERHUB_ORGANIZATION }}/${{ env.DOCKERHUB_REPO }}:${{ steps.define_version.outputs.version }}
      #       ${{ env.DOCKERHUB_ORGANIZATION }}/${{ env.DOCKERHUB_REPO }}:latest
